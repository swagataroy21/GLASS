Assignment Number;Document Number;Controlling Doc No.;Business Area;Document Type;Document Date;Posting Key;Amount in Local Currency;Text;Reference;Clearing Document;Fiscal Year;Reference Year;Offsetting Account;Vendor Code;Vendor Name;Customer Code;Customer Name;G/L Account;Account Type;House Bank;Cost Center;Customer Group;Period;Profit Center;Special G/L Indicator;Value Date;Posting Date;Reversal Ref;Reversal Item;User;Segment BUSA;Recovery Account;Plant;PO Number;Year/Period;Clearing Date;Reference Date;Ledger


Start: It will have the file in local storage but at the top right corner give a file upload option as well. If file is uploaded, refer to that file, else refer to the one attached in local storage. While uploading, show success/error message and progress. 

1. Input data: It will be in CSV (since I am using ABAP to download it) but convert it to parquet in code. The CSV will have these columns:
Assignment Number;Document Number;Controlling Doc No.;Business Area;Document Type;Document Date;Posting Key;Amount in Local Currency;Text;Reference;Clearing Document;Fiscal Year;Reference Year;Offsetting Account;Vendor Code;Vendor Name;Customer Code;Customer Name;G/L Account;Account Type;House Bank;Cost Center;Customer Group;Period;Profit Center;Special G/L Indicator;Value Date;Posting Date;Reversal Ref;Reversal Item;User;Segment BUSA;Recovery Account;Plant;PO Number;Year/Period;Clearing Date;Reference Date;Ledger

All aggregations will be performed on the Amount in local currency field.

In the other excel there will be columns : 'Division' and 'Business Area'. This will be tagged to 1st excel's business area. All the Business area will be tagged to some division. If something is not tagged, mark it as Others.

2. Filters: Users will initially be given a drop down of all the available G/L Account Numbers present in the file, they will select one and then all the operations will start. This is the first level of filter. However, later i might need to work with all GLs and take some other filters.

3. Derived Colums:
Logic 1: Based on the 'Posting date' and another date (picked up by a date picker in frontend, default current system date) - it will check the no. Of days and classify the data into differnet categories: <6 months, 6months to 1 year, 1-2 years, 2-3 years, 3-5 years, >5 years. This will be the Ageing column.
Logic 2: in the other excel there will be a 'Division' to 'Business Area' Mapping. All the Business area will be tagged to some division. If something is not tagged, mark it as Others. So division will be added to that.

4. Categorization/Aggregation: Group by will have all columns based on the logic. Sum will have to performed on column Amount in Local Currency.

5. Drill Down Logic: Firstly show the data based on that GL into 2 Tables. 1. Selected GL vs Ageing.
2. Selected GL vs Division. Based on the data of both tables, AI will generate a summary here and point out which needs attention.
Further drilldown is given below marked as I) II) III) and so on 
I) After any cell click on  either table, 1st Grouping would be based on the selected GL vs Ageing vs Division - necessarily combining the 2 tables. AI will generate summaries here too.
II) Now if user clicks on any of the data cells, it will take that Division and that ageing as filters (Should be displayed above in navbar) and show those as headers drilldown for values in respective Business areas. 
III) Same approach for another user click but now for all Division, Business area, and ageing. 
IV) Now same for 'Vendor Code' and 'Vendir Name' in one table (if blank mention as Others), 'Customer Code' and 'Customer Name' in another (if blank mention as Others) and 'Document type'

6. Frontend UI: I want mostly tables. Charts for the same tables should be placed at the end of the after all the tables. Tables ahould not be beside each other. It should be one after another. Charts to be places beside each other.

7. Gen AI summary: Create a panel on the right side of the screen saying AI summary and points. It should summarise per drilldown level and in each table.

8. Tech Stack: Already Discussed.  


npm install axios ag-grid-community ag-grid-react chart.js react-chartjs-2



No overload matches this call.
  Overload 1 of 2, '(props: AgGridReactProps<any>): AgGridReact<any>', gave the following error.
    Type '{ rowData: any; columnDefs: any; className: string; style: { height: number; width: string; marginBottom: string; }; domLayout: string; }' is not assignable to type 'Readonly<AgGridReactProps<any>>'.
      Types of property 'domLayout' are incompatible.
        Type 'string' is not assignable to type 'DomLayoutType | undefined'.
  Overload 2 of 2, '(props: AgGridReactProps<any>, context: any): AgGridReact<any>', gave the following error.
    Type '{ rowData: any; columnDefs: any; className: string; style: { height: number; width: string; marginBottom: string; }; domLayout: string; }' is not assignable to type 'Readonly<AgGridReactProps<any>>'.
      Types of property 'domLayout' are incompatible.
        Type 'string' is not assignable to type 'DomLayoutType | undefined'.
